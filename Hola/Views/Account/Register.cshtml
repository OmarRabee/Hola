@model Hola.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
}
@section styles{
    <!-- Stylesheets -->
    <link rel="stylesheet" href="~/Content/style.css">
    <link rel="stylesheet" href="~/Content/set1.css">
    <!--Google Fonts-->
    <link href="~/Content/fonts/css" rel="stylesheet" type="text/css">
    <link href="~/Content/fonts/css(1)" rel="stylesheet" type="text/css">
    <link href="~/Content/fonts/css(2)" rel="stylesheet">
}


@*<h2>@ViewBag.Title.</h2>*@
<!-- #region Old -->
@*@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()
        <h4>Create a new account.</h4>
        <hr />
        @Html.ValidationSummary("", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" class="btn btn-default" value="Register" />
            </div>
        </div>
    }*@

<!-- #endregion -->

<div id="main-wrapper">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-offset-3 col-md-6 right-side" style="background-color:rgba(255, 255, 255, .8); box-shadow: 0px 0px 30px rgba(0, 0, 0, 0.4);">
                <section id="loginForm">
                    @using (Html.BeginForm("Register", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <!--UserName-->
                        <span class="input input--hoshi">
                            <input class="input__field input__field--hoshi" type="text" id="UserName" name="UserName">
                            <label class="input__label input__label--hoshi input__label--hoshi-color-3" for="UserName" style="color: hsl(20, 100%, 50%);">
                                <span class="input__label-content input__label-content--hoshi">User Name</span>
                            </label>
                            <br /><br /><br />
                            @Html.ValidationMessageFor(m => m.UserName, "", new { @class = "text-danger" })
                        </span>

                        <!--Email-->
                        <span class="input input--hoshi">
                            <input class="input__field input__field--hoshi" type="text" id="Email" name="Email">
                            <label class="input__label input__label--hoshi input__label--hoshi-color-3" for="email" style="color: hsl(20, 100%, 50%);">
                                <span class="input__label-content input__label-content--hoshi">E-mail</span>
                            </label>
                            <br /><br /><br />
                            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                        </span>

                        <!--Password-->
                        <span class="input input--hoshi">
                            <input class="input__field input__field--hoshi" type="password" id="Password" name="Password">
                            <label class="input__label input__label--hoshi input__label--hoshi-color-3" for="password" style="color: hsl(20, 100%, 50%);">
                                <span class="input__label-content input__label-content--hoshi">Password</span>
                            </label>
                            <br /><br /><br />
                            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                        </span>

                        <!--Confirm Password-->
                        <span class="input input--hoshi">
                            <input class="input__field input__field--hoshi" type="password" id="ConfirmPassword" name="ConfirmPassword">
                            <label class="input__label input__label--hoshi input__label--hoshi-color-3" for="ConfirmPassword" style="color: hsl(20, 100%, 50%);">
                                <span class="input__label-content input__label-content--hoshi">Confirm Password</span>
                            </label>
                            <br /><br /><br />
                            @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                        </span>

                        <!--DateOfBirth-->
                        <span class="input input--hoshi">
                            <label class="input__label input__label--hoshi input__label--hoshi-color-3" for="DateOfBirth" style="color: hsl(20, 100%, 50%);">
                                <span class="input__label-content input__label-content--hoshi">Birth Date</span>
                            </label>
                            <br />
                            <input class="input__field input__field--hoshi" type="date" id="DateOfBirth" name="DateOfBirth">
                            <br /><br /><br />
                            @Html.ValidationMessageFor(m => m.DateOfBirth, "", new { @class = "text-danger" })
                        </span>
                        <div class="row">
                            <div class="cta">
                                <input type="submit" class="btn btn-primary col-md-offset-4" value="Sign-up" />
                                <br />
                            </div>
                        </div>

                        @*<ul class="social list-inline">
                            <li><a href="https://dcrazed.com/html/signup-pack/#">Facebook</a></li>
                            <li><a href="https://dcrazed.com/html/signup-pack/#">Twitter</a></li>
                            <li><a href="https://dcrazed.com/html/signup-pack/#">Linkedin</a></li>
                        </ul>*@
                    }
                </section>
            </div>
        </div>
    </div>
</div>  <!--end #main-wrapper-->


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            // body has been loaded
            $('body').load(function () {
                // Change the background-image
                $('element').css('background-image', 'url(../../Graphics/languagesCover.jpg)');
            });
        });
        (function () {
            // trim polyfill : https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/Trim
            if (!String.prototype.trim) {
                (function () {
                    // Make sure we trim BOM and NBSP
                    var rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;
                    String.prototype.trim = function () {
                        return this.replace(rtrim, '');
                    };
                })();
            }

            [].slice.call(document.querySelectorAll('input.input__field')).forEach(function (inputEl) {
                // in case the input is already filled..
                if (inputEl.value.trim() !== '') {
                    classie.add(inputEl.parentNode, 'input--filled');
                }

                // events:
                inputEl.addEventListener('focus', onInputFocus);
                inputEl.addEventListener('blur', onInputBlur);
            });

            function onInputFocus(ev) {
                classie.add(ev.target.parentNode, 'input--filled');
            }

            function onInputBlur(ev) {
                if (ev.target.value.trim() === '') {
                    classie.remove(ev.target.parentNode, 'input--filled');
                }
            }
        })();
        $(document).ready(function () {
            $('body').css({ "background-image": "url(../../Graphics/languagesWorld.jpg)", "background-size": "contain", "background-repeat": "no-repeat" });
            $('#loginForm').hide();
            $('#loginForm').fadeIn(800);
        })
    </script>
}
